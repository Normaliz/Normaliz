##
## Makefile configuration for normaliz
## (for the classic build system)
##
CXX = g++
## CXX = clang++
CXXFLAGS += -std=c++14
CXXFLAGS += -Wall -pedantic -Wno-sign-compare -Wno-deprecated
CXXFLAGS += -O3 -funroll-loops -fPIC
#CXXFLAGS += -pg      ## profiling
#CXXFLAGS += -DNDEBUG ## disables asserts
#CXXFLAGS +=-mtune=corei7-avx.

GMPFLAGS = -lgmpxx -lgmp
INSTALLDIR = $(PWD)/../local
OPT_LIB_ROOT=$(INSTALLDIR)
CXXFLAGS += -I .. -I . -DNMZ_MAKEFILE_CLASSIC ## this avoids reading nmz_config.h
CXXFLAGS += -I $(OPT_LIB_ROOT)/include

ifeq ($(NMZ_EXTENDED_TESTS),yes)
CXXFLAGS += -DNMZ_EXTENDED_TESTS
endif

# development?
ifeq ($(NMZ_DEVELOP),no)
  STRIP_FLAGS = -Wl,-s
else
  CXXFLAGS += -g -DNMZ_DEVELOP
endif

## use OpenMP?
ifeq ($(OPENMP),no)
  CXXFLAGS += -Wno-unknown-pragmas
else
  CXXFLAGS += -fopenmp ## g++
  ##CXXFLAGS += -fopenmp=libgomp ## clang++
endif

#gperftools ?
ifeq ($(GPERFTOOLS),yes)
  CXXFLAGS += -DNMZ_GPERF
  PERFFLAGS = -lprofiler
else
  CXXFLAGS += -static
endif

ifeq ($(MSYS),yes)
ifeq ($(NAUTY),no)
else
  CXXFLAGS += -DNMZ_NAUTY -DNMZ_NAUTYNAUTY -DNMZ_NAUTY_TLS
  NAUTYFLAGS = $(OPT_LIB_ROOT)/lib/libnauty.a
endif

# skip hash-library?
ifeq ($(HASHLIBRARY),no)
else
  CXXFLAGS += -DNMZ_HASHLIBRARY
  HASHLIBRARYFLAGS = $(OPT_LIB_ROOT)/lib/libsha256.a
endif
endif ## msys

ifeq ($(MSYS),yes)
else
ifeq ($(NAKED),yes) ## switches off all optional libraries
else

# skip nauty?
ifeq ($(NAUTY),no)
else
  CXXFLAGS += -DNMZ_NAUTY -DNMZ_NAUTYNAUTY -DNMZ_NAUTY_TLS
  NAUTYFLAGS = $(OPT_LIB_ROOT)/lib/libnauty.a
endif

# skip hash-library?
ifeq ($(HASHLIBRARY),no)
else
  CXXFLAGS += -DNMZ_HASHLIBRARY
  HASHLIBRARYFLAGS = $(OPT_LIB_ROOT)/lib/libsha256.a
endif

##use COCOA?
ifeq ($(COCOA),no)
else
  CXXFLAGS += -DNMZ_COCOA -DCoCoA_THREADSAFE_HACK
  COCOAFLAGS = $(OPT_LIB_ROOT)/lib/libcocoa.a
endif

##use EANTIC?
ifeq ($(EANTIC),no)
##use FLINT?
ifeq ($(FLINT),no)
else
CXXFLAGS += -DNMZ_FLINT
FLINTFLAGS = -L $(OPT_LIB_ROOT)/lib -lflint -L $(OPT_LIB_ROOT)/lib -lmpfr
endif
else
  CXXFLAGS += -DENFNORMALIZ -DNMZ_FLINT
  EANTICFLAGS = -L $(OPT_LIB_ROOT)/lib -leanticxx -leantic -larb -lantic -lflint -lmpfr
endif

endif ## NAKED
endif ## MSYS

LINKFLAGS += $(COCOAFLAGS) $(EANTICFLAGS) $(FLINTFLAGS) $(NAUTYFLAGS) $(HASHLIBRARYFLAGS)  $(GMPFLAGS) $(PERFFLAGS) $(STRIP_FLAGS)

#$(PERFFLAGS)
## -lprofiler -lunwind -llzma

