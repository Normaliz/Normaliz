##
## Makefile configuration for normaliz
## (for the classic build system)
##
CXX = g++
## CXX = clang++
#CXX = linux32 g++ -m32 -march=i686  #compile it for linux32
CXXFLAGS += -std=c++14 -Wno-deprecated
# CXXFLAGS += -Wall -pedantic
CXXFLAGS += -O3 -funroll-loops -fPIC
#CXXFLAGS += -I /usr/local/boost_1_45_0
#CXXFLAGS += -pg      ## profiling
#CXXFLAGS += -DNDEBUG ## disables asserts
#CXXFLAGS +=-mtune=corei7-avx

## for distributing the executables link static (does not work for mac)
CXXFLAGS += -static -DNMZ_MAKEFILE_CLASSIC -I .. -I .

INSTALLDIR = $(PWD)/../local

OPT_LIB_ROOT=$(INSTALLDIR)

## use OpenMP?
ifeq ($(OPENMP),no)
  CXXFLAGS += -Wno-unknown-pragmas
else
  CXXFLAGS += -fopenmp ## g++
  ## CXXFLAGS += -fopenmp=libgomp ## clang++
endif

GMPFLAGS = -lgmpxx -lgmp

# skip nauty?
ifeq ($(NAUTY),no)
else
  CXXFLAGS += -DNMZ_NAUTY
  NAUTYFLAGS = $(OPT_LIB_ROOT)/lib/libnauty.a
endif

# development?
ifeq ($(NMZ_DEVELOP),no)
else
  CXXFLAGS += -g -DNMZ_DEVELOP
endif

##use COCOA?
ifeq ($(COCOA),no)
else
  CXXFLAGS += -DNMZ_COCOA -DCoCoA_THREADSAFE_HACK
  CXXFLAGS += -I $(OPT_LIB_ROOT)/include
  COCOAFLAGS = $(OPT_LIB_ROOT)/lib/libcocoa.a
endif


#gperftools ?
ifeq ($(GPERFTOOLS),yes)
CXXFLAGS += -DNMZ_GPERF
PERFFLAGS = -lprofiler
#   -lunwind -llzma
endif

##use EANTIC?
ifeq ($(EANTIC),no)
##use FLINT?
ifeq ($(FLINT),no)
else
CXXFLAGS += -DNMZ_FLINT
CXXFLAGS += -I $(OPT_LIB_ROOT)/include/
FLINTFLAGS = -L $(OPT_LIB_ROOT)/lib -lflint -L $(OPT_LIB_ROOT)/lib -lmpfr
endif
else
  CXXFLAGS += -DENFNORMALIZ -DNMZ_FLINT
  CXXFLAGS += -I $(OPT_LIB_ROOT)/include
  EANTICFLAGS = -L $(OPT_LIB_ROOT)/lib -leanticxx -leantic -larb -lflint -lmpfr
endif

LINKFLAGS += $(COCOAFLAGS) $(EANTICFLAGS) $(FLINTFLAGS) $(NAUTYFLAGS)  $(GMPFLAGS) $(PERFFLAGS)
#$(PERFFLAGS)
## -lprofiler -lunwind -llzma

