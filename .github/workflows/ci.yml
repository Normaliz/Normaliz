name: Run tests

on:
  - push
  - pull_request

jobs:

  makedistcheck-cocoa:
    runs-on: ubuntu-latest
    env:
      BUILDSYSTEM: "makedistcheck-cocoa"
      NO_COVERAGE: "1"
    steps:
      - uses: actions/checkout@v2
      - name: "Install prerequisites"
        run: |
          sudo apt-get update
          sudo apt-get install libgmp-dev
          ./install_scripts_opt/install_nmz_cocoa.sh
      - name: "Configure"
        run: .github/workflows/.github-ci-build_configure.sh
      - name: "Build"
        run: .github/workflows/.github-ci-build_make.sh
      - name: "Run tests"
        run: .github/workflows/.github-ci-build_check.sh

  eantic-nauty-cocoa-clang:
    runs-on: ubuntu-20.04
    env:
      BUILDSYSTEM: "eantic-nauty-cocoa-clang"
      NO_COVERAGE: "1"
      NO_OPENMP: "1"
      NMZ_COMPILER: "clang++"
    steps:
      - uses: actions/checkout@v2
      - name: "Install prerequisites"
        run: |
          sudo apt-get update
          sudo apt-get install libgmp-dev libboost-all-dev
          ./install_scripts_opt/install_nmz_cocoa.sh
          ./install_scripts_opt/install_nmz_nauty.sh
          ./install_scripts_opt/install_eantic_with_prerequisites.sh
      - name: "Configure"
        run: .github/workflows/.github-ci-build_configure.sh
      - name: "Build"
        run: .github/workflows/.github-ci-build_make.sh
      - name: "Run tests"
        run: .github/workflows/.github-ci-build_check.sh

  eantic-nauty-cocoa-extended:
    runs-on: ubuntu-latest
    env:
      BUILDSYSTEM: "eantic-nauty-cocoa-extended"
    steps:
      - uses: actions/checkout@v2
      - name: "Install prerequisites"
        run: |
          sudo apt-get update
          sudo apt-get install libgmp-dev libmpfr-dev libboost-all-dev
          ./install_scripts_opt/install_nmz_nauty.sh
          ./install_scripts_opt/install_eantic_with_prerequisites.sh
          ./install_scripts_opt/install_nmz_cocoa.sh
      # - name: "Setup tmate session"
      #   uses: mxschmitt/action-tmate@v3
      - name: "Configure"
        run: .github/workflows/.github-ci-build_configure.sh
      # - name: "Setup tmate session"
      #   uses: mxschmitt/action-tmate@v3
      - name: "Build"
        run: .github/workflows/.github-ci-build_make.sh
      # - name: "Setup tmate session"
      #   uses: mxschmitt/action-tmate@v3
      - name: "Run tests"
        run: .github/workflows/.github-ci-build_check.sh
      # - name: "Setup tmate session"
      #   uses: mxschmitt/action-tmate@v3
      - name: "Upload coverage data to Codecov"
        uses: codecov/codecov-action@v1

  eantic-nauty-notls-cocoa:
    runs-on: ubuntu-18.04
    env:
      BUILDSYSTEM: "eantic-nauty-notls-cocoa"
      NO_COVERAGE: "1"
    steps:
      - uses: actions/checkout@v2
      - name: "Install prerequisites"
        run: |
          sed -i 's/\ --enable-tls//g' install_scripts_opt/install_nmz_nauty.sh
          sudo apt-get update
          sudo apt-get install libgmp-dev libmpfr-dev libboost-all-dev
          sed -i 's/\ --enable-tls//g' install_scripts_opt/install_nmz_nauty.sh
          ./install_scripts_opt/install_nmz_nauty.sh
          ./install_scripts_opt/install_eantic_with_prerequisites.sh
          ./install_scripts_opt/install_nmz_cocoa.sh
      # - name: "Setup tmate session"
      #   uses: mxschmitt/action-tmate@v3
      - name: "Configure"
        run: .github/workflows/.github-ci-build_configure.sh
      # - name: "Setup tmate session"
      #   uses: mxschmitt/action-tmate@v3
      - name: "Build"
        run: .github/workflows/.github-ci-build_make.sh
      # - name: "Setup tmate session"
      #   uses: mxschmitt/action-tmate@v3
      - name: "Run tests"
        run: .github/workflows/.github-ci-build_check.sh
      # - name: "Setup tmate session"
      #   uses: mxschmitt/action-tmate@v3

  flint:
    runs-on: ubuntu-latest
    env:
      BUILDSYSTEM: "flint"
      NO_COVERAGE: "1"
      NMZ_COMPILER: "clang++-12"
    steps:
      - uses: actions/checkout@v2
      - name: "Install prerequisites"
        run: |
          sudo apt-get update
          sudo apt-get install libgmp-dev libmpfr-dev
          ./install_scripts_opt/install_nmz_flint.sh
      # - name: "Setup tmate session"
      #   uses: mxschmitt/action-tmate@v3
      - name: "Configure"
        run: .github/workflows/.github-ci-build_configure.sh
      # - name: "Setup tmate session"
      #   uses: mxschmitt/action-tmate@v3
      - name: "Build"
        run: .github/workflows/.github-ci-build_make.sh
      # - name: "Setup tmate session"
      #   uses: mxschmitt/action-tmate@v3
      - name: "Run tests"
        run: .github/workflows/.github-ci-build_check.sh
      # - name: "Setup tmate session"
      #   uses: mxschmitt/action-tmate@v3

  ##-------------------------------------------------------------

  ## Test on Mac OS X with LLVM from Homebrew for OpenMP support
  ## Build "static" Mac binary distribution and deploy to Normaliz-bindist
  ## (thus we set  NO_COVERAGE=1)
  cocoa-eantic-nauty-static:
    runs-on: macos-latest
    env:
      BUILDSYSTEM: "cocoa-eantic-nauty-static"
      CONFIGURE_FLAGS: "--enable-openmp"
      NO_COVERAGE: "1"
    steps:
      - uses: actions/checkout@v2
      - name: "Setup compiler and build automake"
        run: |
          brew reinstall llvm automake boost
      - name: "Install prerequisites"
        run: |
          ./install_scripts_opt/install_nmz_nauty.sh
          ./install_scripts_opt/install_eantic_with_prerequisites.sh
          ./install_scripts_opt/install_nmz_cocoa.sh
      # - name: "Setup tmate session"
      #   uses: mxschmitt/action-tmate@v3
      - name: "Configure"
        run: .github/workflows/.github-ci-build_configure.sh
      # - name: "Setup tmate session"
      #   uses: mxschmitt/action-tmate@v3
      - name: "Build"
        run: .github/workflows/.github-ci-build_make.sh
      # - name: "Setup tmate session"
      #   uses: mxschmitt/action-tmate@v3
      - name: "Run tests"
        run: .github/workflows/.github-ci-build_check.sh
      # - name: "Setup tmate session"
      #   uses: mxschmitt/action-tmate@v3
      - name: "Archive MacOS binary"
        uses: actions/upload-artifact@v2
        with:
          name: MacOSbinary.zip
          path: local/bin/MacOSbinary.zip

  eantic:
    runs-on: macos-latest
    env:
      BUILDSYSTEM: "eantic"
      NO_COVERAGE: "1"
      NO_OPENMP: "1"
    steps:
      - uses: actions/checkout@v2
      - name: "Setup automake"
        run: |
          brew reinstall automake boost
      - name: "Install prerequisites"
        run: |
          ./install_scripts_opt/install_eantic_with_prerequisites.sh
      # - name: "Setup tmate session"
      #   uses: mxschmitt/action-tmate@v3
      - name: "Configure"
        run: .github/workflows/.github-ci-build_configure.sh
      # - name: "Setup tmate session"
      #   uses: mxschmitt/action-tmate@v3
      - name: "Build"
        run: .github/workflows/.github-ci-build_make.sh
      # - name: "Setup tmate session"
      #   uses: mxschmitt/action-tmate@v3
      - name: "Run tests"
        run: .github/workflows/.github-ci-build_check.sh
      # - name: "Setup tmate session"
      #   uses: mxschmitt/action-tmate@v3

  nauty:
    runs-on: macos-latest
    env:
      BUILDSYSTEM: "nauty"
      NO_COVERAGE: "1"
    steps:
      - uses: actions/checkout@v2
      - name: "Setup automake"
        run: |
          brew reinstall automake
      - name: "Install prerequisites"
        run: |
          ./install_scripts_opt/install_nmz_nauty.sh
      # - name: "Setup tmate session"
      #   uses: mxschmitt/action-tmate@v3
      - name: "Configure"
        run: .github/workflows/.github-ci-build_configure.sh
      # - name: "Setup tmate session"
      #   uses: mxschmitt/action-tmate@v3
      - name: "Build"
        run: .github/workflows/.github-ci-build_make.sh
      # - name: "Setup tmate session"
      #   uses: mxschmitt/action-tmate@v3
      - name: "Run tests"
        run: .github/workflows/.github-ci-build_check.sh
      # - name: "Setup tmate session"
      #   uses: mxschmitt/action-tmate@v3

  macos_installscript-check:
    runs-on: macos-latest
    env:
      BUILDSYSTEM: "check"
      NORMPARA: "-x=1"
      NO_COVERAGE: "1"
    steps:
      - uses: actions/checkout@v2
      - name: "Setup automake"
        run:
          brew reinstall automake boost
      - name: "install_normaliz_with_eantic.sh"
        run: ./install_normaliz_with_eantic.sh
      # - name: "Setup tmate session"
      #   uses: mxschmitt/action-tmate@v3
      - name: "Run tests"
        run: |
          cd build
          ../.github/workflows/.github-ci-build_check.sh
      # - name: "Setup tmate session"
      #   uses: mxschmitt/action-tmate@v3
